#include <stdio.h>
#include <stdlib.h>
#include <ctype.h>
#include <string.h>
#include <unistd.h>


void encode(char *infile, char *outfile)
{
	char *HUFF_LUT[26] = { "1010", "011110", "10111", "1110", "010", "011111", "11010",
				    "00010", "0110", "111110000", "111111", "10110","11011", "0000", 
				    "11110", "0111001", "11111000101", "1001", "1000", "1100", "00011",
				    "1111101", "011101", "11111000100", "1111100011", "0111000" };
				    
	char symbol_to_encode;
	FILE *in = fopen(infile, "r");
	FILE *out = fopen (outfile , "w");
	char buffer[11];
    short int huff_let;

    if (in == NULL)
    {
    	printf("File cannot be opened %s\n", infile);
    	abort();
    }
		
	//Using fseek to place pointer at the begining of the file 
	fseek ( out , 0 , SEEK_SET );
	while (1) 
	{
		huff_let = fgetc(in);
		huff_let = tolower(huff_let);
		if (huff_let == EOF)
			break;
		else
		{
			 /* this if statement is used find the huffman value for space since my Huff_lut does not accomodate it
       */
			 if (huff_let == 32)
			 {
			 	fwrite ("001",1,3,out);
			 }
			 else if (huff_let == 225)
			 {
			 	fwrite ("11111001",1,8,out);
			 }
			 else
			 {	
			 	
			 	if ((huff_let > 96) & (huff_let < 123))
			 	{	 
					fwrite (HUFF_LUT[(short int)huff_let-97],1,strlen(HUFF_LUT[(short int)huff_let-97]),out);
				}
			 }
			 //Write the buffer to the file
		}
	}
	printf("Encode is complete\n");
    fclose(in);
    fclose (out);
    
}
